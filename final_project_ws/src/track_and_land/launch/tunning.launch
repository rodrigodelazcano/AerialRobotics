<launch>
	<!-- vim: set ft=xml noet : -->
	<!-- example launch script for PX4 based FCU's -->

	<arg name="fcu_url" default="udp://127.0.0.1:14551@:14551" />
	<arg name="gcs_url" default="udp://@192.168.8.55" />
	<arg name="tgt_system" default="1" />
	<arg name="tgt_component" default="1" />
	<arg name="log_output" default="screen" />
	<arg name="fcu_protocol" default="v2.0" />
	<arg name="respawn_mavros" default="false" />

	<include file="$(find mavros)/launch/node.launch">
		<arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
		<arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />

		<arg name="fcu_url" value="$(arg fcu_url)" />
		<arg name="gcs_url" value="$(arg gcs_url)" />
		<arg name="tgt_system" value="$(arg tgt_system)" />
		<arg name="tgt_component" value="$(arg tgt_component)" />
		<arg name="log_output" value="$(arg log_output)" />
		<arg name="fcu_protocol" value="$(arg fcu_protocol)" />
		<arg name="respawn_mavros" default="$(arg respawn_mavros)" />
	</include>

  <arg
    name="model" />
  <param
    name="robot_description"
    textfile="$(find tf_transforms)/urdf/drone.urdf" />
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
   <node
     name="tf_transforms_node"
     pkg="tf_transforms"
     type="tf_transforms_node" />

   <node
      name="pid_controller"
      pkg="tf_transforms"
      type="pid.py" 
      />
   <node
      name="mission_planner"
      pkg="tf_transforms"
      type="simple_mp.py" />

</launch>

